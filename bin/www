#!/usr/bin/env node

/**
 * Module dependencies.
 */

var app           = require('../app'),
    debug         = require('debug')('express-js-setup:server'),
    http          = require('http'),
    globalLibrary = require('../config/application/global_library'),
    Mongo         = require('../config/db/mongo');

// Create mongo instance

var mongo = new Mongo(),
    mongoOptions = {
      server: {
        poolSize: 1
      }
    };

/**
 * Get port from environment and store in Express.
 */

var port = parseInt(process.env.PORT, 10) || 3000;
app.set('port', port);

/**
 * Create HTTP server.
 */

var server = http.createServer(app);

/**
 * Listen on provided port, on all network interfaces.
 */

mongo.connect(mongoOptions, function(){
  globalLibrary = mongo.db;
  server.listen(port);
});
server.on('error', onError);
server.on('listening', onListening);

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error('Port ' + port + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error('Port ' + port + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  debug('Listening on port ' + server.address().port);
}
